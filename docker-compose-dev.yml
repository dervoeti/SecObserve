version: "3"

volumes:
  dev_huey_data:
  # dev_mysql_data:
  # dev_postgres_data:
  dev_keycloak_data:

services:
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./traefik.yml:/traefik.yml
      - ./acme.json:/acme.json
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    image: secobserve_frontend
    profiles:
      - frontend
    ports:
      - "3000:3000"
    environment:
      API_BASE_URL: ${SO_API_BASE_URL:-https://secobserve.stackable.tech/api}
      OIDC_ENABLE: ${SO_OIDC_ENABLE:-false}
      OIDC_AUTHORITY: ${SO_OIDC_AUTHORITY:-http://localhost:8080/realms/secobserve}
      OIDC_CLIENT_ID: ${SO_OIDC_CLIENT_ID:-secobserve}
      OIDC_REDIRECT_URI: ${SO_OIDC_REDIRECT_URI:-https://secobserve.stackable.tech/}
      OIDC_POST_LOGOUT_REDIRECT_URI: ${SO_OIDC_POST_LOGOUT_REDIRECT_URI:-https://secobserve.stackable.tech/}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.secobserve-frontend.rule=Host(`secobserve.stackable.tech`) && !PathPrefix(`/api`)"
      - "traefik.http.routers.secobserve-frontend.entrypoints=https"
      - "traefik.http.routers.secobserve-frontend.tls.certresolver=myresolver"

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/dev/django/Dockerfile
    image: secobserve_backend_dev
      #depends_on:
      # - postgres
      # - keycloak
    environment:
      # --- Admin user ---
      ADMIN_USER: ${SO_ADMIN_USER:-admin}
      ADMIN_PASSWORD: ${SO_ADMIN_PASSWORD:-}
      ADMIN_EMAIL: ${SO_ADMIN_EMAIL:-}
      # --- Database ---
      DATABASE_ENGINE: ${SO_DATABASE_ENGINE:-django.db.backends.postgresql}
      DATABASE_HOST: ${SO_DATABASE_HOST:-}
      DATABASE_PORT: ${SO_DATABASE_PORT:-5432}
      DATABASE_DB: ${SO_DATABASE_DB:-}
      DATABASE_USER: ${SO_DATABASE_USER:-}
      DATABASE_PASSWORD: ${SO_DATABASE_PASSWORD:-}
      # --- Security ---
      ALLOWED_HOSTS: ${SO_ALLOWED_HOSTS:-secobserve.stackable.tech,localhost}
      CORS_ALLOWED_ORIGINS: ${SO_CORS_ALLOWED_ORIGINS:-https://secobserve.stackable.tech}
      DJANGO_SECRET_KEY: ${SO_DJANGO_SECRET_KEY:-}
      FIELD_ENCRYPTION_KEY: ${SO_FIELD_ENCRYPTION_KEY:-}
      # --- OpenID Connect ---
      OIDC_AUTHORITY: ${SO_OIDC_AUTHORITY:-http://keycloak:8080/realms/secobserve}
      OIDC_CLIENT_ID: ${SO_OIDC_CLIENT_ID:-secobserve}
      OIDC_USERNAME: ${SO_OIDC_USERNAME:-preferred_username}
      OIDC_FIRST_NAME: ${SO_OIDC_FIRST_NAME:-given_name}
      OIDC_LAST_NAME: ${SO_OIDC_LAST_NAME:-family_name}
      OIDC_FULL_NAME: ${SO_OIDC_FULL_NAME:-}
      OIDC_EMAIL: ${SO_OIDC_EMAIL:-email}
      # --- Development ---
      USE_DOCKER: "yes"
    volumes:
      - ./backend:/app
      - dev_huey_data:/var/lib/huey
    ports:
      - "8000:8000"
    command: /start
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.secobserve-backend.rule=Host(`secobserve.stackable.tech`) && (PathPrefix(`/api`) || PathPrefix(`/admin`))"
      - "traefik.http.routers.secobserve-backend.entrypoints=https"
      - "traefik.http.routers.secobserve-backend.tls.certresolver=myresolver"
  # mysql:
  #   image: mysql:8.3.0
  #   profiles:
  #     - mysql
  #   environment:
  #     MYSQL_RANDOM_ROOT_PASSWORD: ${SO_MYSQL_RANDOM_ROOT_PASSWORD:-yes}
  #     MYSQL_DATABASE: ${SO_MYSQL_DATABASE:-secobserve}
  #     MYSQL_USER: ${SO_MYSQL_USER:-secobserve}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD:-secobserve}
  #   volumes:
  #     - dev_mysql_data:/var/lib/mysql
  #   ports:
  #     - "3306:3306"

# postgres:
#   image: postgres:15.5-alpine
#   volumes:
#     - dev_postgres_data:/var/lib/postgresql/data
#   environment:
#     POSTGRES_DB: ${SO_POSTGRES_DB:-secobserve}
#     POSTGRES_USER: ${SO_POSTGRES_USER:-secobserve}
#     POSTGRES_PASSWORD: ${SO_POSTGRES_PASSWORD:-secobserve}
#   ports:
#     - "5432:5432"

  # mailhog:
  #   image: mailhog/mailhog:v1.0.1
  #   entrypoint: ["/bin/sh", "-c", "MailHog &>/dev/null"]
  #   ports:
  #     - "1025:1025"
  #     - "8025:8025"

  # keycloak:
  #   image: keycloak/keycloak:23.0.5
  #   environment:
  #     - KEYCLOAK_ADMIN=admin
  #     - KEYCLOAK_ADMIN_PASSWORD=admin
  #     - KC_HTTPS_ENABLED=false
  #     - KC_HOSTNAME_STRICT_HTTPS=false
  #   volumes:
  #     - ./keycloak:/opt/keycloak/data/
  #   ports:
  #     - 8080:8080
  #   command: start-dev
